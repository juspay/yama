name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Auto-format code
        run: pnpm run format

      - name: Run linting
        run: |
          echo "🔍 Running ESLint validation with controlled warning limits..."
          pnpm run lint

      - name: 🔒 Security & Environment Validation
        run: |
          echo "🔍 Running build rule enforcement validations..."
          pnpm run validate:all

      - name: Type checking
        run: pnpm run type-check

      - name: Build package
        run: pnpm run build

      - name: Run tests
        run: pnpm run test

  build-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Check package build
        run: pnpm run prepack

      - name: Verify package contents
        run: |
          pnpm pack
          ls -la dist/

  quality-gate:
    runs-on: ubuntu-latest
    name: 🛡️ Code Quality & Security Gate
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: 🔍 Build Validation
        run: |
          echo "🔍 Running comprehensive build validation..."
          pnpm run validate

      - name: 📝 Commit Message Validation
        run: |
          echo "📝 Validating commit message format..."
          # For PRs, validate the actual PR head commit, not the merge commit
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "PR Event: Getting head commit from ${{ github.event.pull_request.head.ref }}"
            echo "Head SHA: ${{ github.event.pull_request.head.sha }}"
            # Use GitHub context to get the commit message directly
            COMMIT_MSG=$(git log -1 --pretty=format:"%s" ${{ github.event.pull_request.head.sha }})
            echo "Validating PR head commit: $COMMIT_MSG"
          else
            COMMIT_MSG=$(git log -1 --pretty=format:"%s")
            echo "Validating push commit: $COMMIT_MSG"
          fi
          node scripts/commit-validation.cjs "$COMMIT_MSG"

      - name: 🌍 Environment Validation
        run: |
          echo "🌍 Validating environment configuration..."
          pnpm run validate:env

      - name: 🔒 Security Validation
        run: |
          echo "🔒 Running security checks..."
          pnpm run validate:security

      - name: 📊 ESLint Quality Report
        run: |
          echo "📊 Generating ESLint quality report..."
          pnpm run lint --format=stylish
        continue-on-error: true

      - name: 📈 TypeScript Compiler Check
        run: |
          echo "📈 Running TypeScript compiler strict checks on source files..."
          pnpm run type-check

      - name: 🎯 Code Coverage Analysis
        run: |
          echo "🎯 Running tests with coverage..."
          pnpm run test --coverage || echo "Tests completed with warnings"
        continue-on-error: true

      - name: 📋 Quality Summary
        run: |
          echo "📋 Build Rule Enforcement Summary:"
          echo "✅ Build validation passed"
          echo "✅ Environment validation passed" 
          echo "✅ Security validation passed"
          echo "✅ TypeScript compilation passed"
          echo "✅ Commit message format validated"
          echo ""
          echo "🎉 All quality gates passed!"
